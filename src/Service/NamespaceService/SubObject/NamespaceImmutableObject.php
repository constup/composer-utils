<?php

declare(strict_types = 1);
/**
 * This file has been automatically generated by Constup Automatrix.
 * https://constup.com/automatrix
 */

namespace Constup\ComposerUtils\Service\NamespaceService\SubObject;

use Constup\Automatrix\LanguagePhp\Version0702\DesignPatternInterfaces\ImmutableObjectInterface;

class NamespaceImmutableObject implements ImmutableObjectInterface, NamespaceImmutableObjectInterface
{
    /** @var string */
    private $namespace;
    /** @var string */
    private $absoluteDirectory;

    /**
     * @param string $namespace
     * @param string $absoluteDirectory
     */
    public function __construct(string $namespace, string $absoluteDirectory)
    {
        $this->namespace = $namespace;
        $this->absoluteDirectory = $absoluteDirectory;
    }

    /**
     * @return string
     * @codeCoverageIgnore
     */
    public function getNamespace(): string
    {
        return $this->namespace;
    }

    /**
     * @param string $namespace
     *
     * @return NamespaceImmutableObject
     */
    public function withNamespace(string $namespace): NamespaceImmutableObjectInterface
    {
        return new self($namespace, $this->getAbsoluteDirectory());
    }

    /**
     * @return string
     * @codeCoverageIgnore
     */
    public function getAbsoluteDirectory(): string
    {
        return $this->absoluteDirectory;
    }

    /**
     * @param string $absoluteDirectory
     *
     * @return NamespaceImmutableObject
     */
    public function withAbsoluteDirectory(string $absoluteDirectory): NamespaceImmutableObjectInterface
    {
        return new self($this->getNamespace(), $absoluteDirectory);
    }
}
